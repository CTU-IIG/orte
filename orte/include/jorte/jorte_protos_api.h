/* jorte_typedefs_api.h */

/**
  * This code provides conversion between JAVA a C environments.
  * The C functions are calling here and results are send to JAVA
  * native functions. It uses the header pregenerated by JAVA
  * (by command 'javah -jni class_with_native_function')
  *
  * @author Lukas Pokorny (lukas_pokorny@centrum.cz)
  * @author Martin Vajnar (martin.vajnar@gmail.com)
  * @author CTU FEE Prague - Department of Control Engineering (dce.felk.cvut.cz)
  * @author Project ORTE - OCERA Real Time Ethernet (www.ocera.org)
  * @author dedication to Kj
  * @version 0.1
  *
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
  * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  * GNU General Public License for more details.
  *
  */

#ifndef _JORTE_PROTOS_API_H
#define _JORTE_PROTOS_API_H

#ifdef __cplusplus
extern "C" {
#endif
  
#include <jni.h>
#include "orte.h"

extern int
setTopic(JNIEnv *env, jclass cls, jobject obj, const char *topic);

extern int
setType(JNIEnv *env, jclass cls, jobject obj, const char *type);

extern int
setRecvInfo(JNIEnv *env, const ORTERecvInfo *rinfo, jobject obj);

extern jobject
createAppInfo(JNIEnv *env, const ORTEAppInfo *ainfo);

extern jobject
createPubInfo(JNIEnv *env, const ORTEPubInfo *pinfo);

extern jobject
createSubInfo(JNIEnv *env, const ORTESubInfo *sinfo);

extern NtpTime
getNtpTime(JNIEnv *env, jobject obj);

extern Boolean
onSubDelete(const struct ORTEAppInfo *appInfo,const struct ORTESubInfo *subInfo,void *param);

extern Boolean
onSubRemoteChanged(const struct ORTEAppInfo *appInfo,const struct ORTESubInfo *subInfo,void *param);

extern Boolean
onSubRemoteNew(const struct ORTEAppInfo *appInfo,const struct ORTESubInfo *subInfo,void *param);

extern Boolean
onPubDelete(const struct ORTEAppInfo *appInfo,const struct ORTEPubInfo *pubInfo,void *param);

extern Boolean
onPubRemoteChanged(const struct ORTEAppInfo *appInfo,const struct ORTEPubInfo *pubInfo,void *param);

extern Boolean
onPubRemoteNew(const struct ORTEAppInfo *appInfo,const struct ORTEPubInfo *pubInfo,void *param);

extern Boolean
onAppDelete(const struct ORTEAppInfo *appInfo,void *param);

extern Boolean
onAppRemoteNew(const struct ORTEAppInfo *appInfo,void *param);

extern Boolean
onMgrDelete(const struct ORTEAppInfo *appInfo,void *param);

extern Boolean
onMgrNew(const struct ORTEAppInfo *appInfo,void *param);

extern Boolean
onRegFail(void *param);

extern jclass
findClass(JNIEnv *env, const char* name);

#ifdef __cplusplus
} /* extern "C"*/
#endif

#endif // _JORTE_PROTOS_API_H