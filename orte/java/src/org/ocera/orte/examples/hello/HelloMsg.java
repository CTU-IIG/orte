/* HelloMsg.java */

/* ********************************************************* *
 *                                                           *
 *                Will be Generated by IDL                   *
 *                                                           *
 * ********************************************************* */

import org.ocera.orte.*;
import org.ocera.orte.types.*;


public class HelloMsg extends org.ocera.orte.types.MessageData
{
   private int counter = 0;
   public int count_read = 0; // pro testovaci ucely!!

/* ************************************** * 
 *               data to send             *
 * ************************************** */

   public  int 	  num1;
   public  int 	  num2;   
   
/* ************************************** */

   
  /* constructor  */
  public HelloMsg(DomainApp domainApp, String newTopic)
  {
    super();
 
    // typeName registration
	if(counter == 0)
    {
 	     boolean b;
		 
 	     counter++;
         this.setTopic(newTopic); // set the topic of a publication 
         // register new data typeName	   
     	 b = domainApp.regNewDataType(this.getType(),getMaxDataLength()); 
	     if (b == false) 
	     {
	       System.out.println(":j!: cannot register data type!");    
	     }

	   }
        // init
	    num1 = 0;
        num2 = 0;  
    	//System.out.println(":j: instance of HelloMsg created..");	
  }
      

  /**
   * Serializetaion method. Put all of data fields and write them into a buffer. 
   * @return True - if write successful, False - write failed (IndexOutOfBoundsException or ReadOnlyBufferException).  
   */
  /* TODO osetrit vyjimky - mozna pak bude vracet typ boolean 
   * IndexOutOfBoundsException - If index is negative or not smaller than the buffer's limit 
   * ReadOnlyBufferException - If this buffer is read-only
   */ 
  public void write()
  {
  	/* TODO - control setting fields !!*/
    num1 = 49;
    num2 = 50;
  	//
  	buffer.rewind(); // set offset to 0
  	buffer.putInt(this.num1);
  	buffer.putInt(this.num2);  	
  }
 
  /**
   * Serializetaion method. Put all of data fields and write them into a buffer. 
   * @return True - if write successful, False - write failed (IndexOutOfBoundsException or ReadOnlyBufferException).  
   */
  /* TODO 'BufferUnderflowException' - osetrit vyjimky - mozna pak bude vracet typ boolean 

   */ 
  public void read()
  {
   	buffer.rewind(); // set offset to 0
  	this.num1 = buffer.getInt();  			
  	this.num2 = buffer.getInt();
  }

  /**
   * Return maximum buffer's length according to its data fields.
   * @return Length of buffer.
   **/  
  public int getMaxDataLength()
  {
  	int len=0;
  	len += ORTEConstant.INT_FIELD_SIZE;
  	len += ORTEConstant.INT_FIELD_SIZE;
    return len;
  }

  public String toString()
  {
    String data = new String();
    
    data += (" num1 = " + num1); 
    data += (" num2 = " + num2);	
   	return data;	  
  }
  
}  