default: cvs
	@echo "Now you can run './configure'"

cvs:
	autoreconf -i 

all:
	aclocal -I admin 
	autoheader
	automake
	autoconf

.PHONY: default cvs all dist dist-tarball

VER=$(shell git describe --match='v[0-9]*' | sed -e 's/^v\(.*\)/\1/')

dist:
	$(MAKE) VER=$(VER) dist-tarball dist-check
	@echo "Tarball stored as orte-$(VER).tar.gz"

dist-tarball: orte-$(VER).tar.gz

orte-$(VER).tar.gz: $(shell git ls-files)
# Export clean sources and run autoreconf
	test ! -d orte-$(VER)
	git archive --format=tar --prefix=orte-$(VER)/ HEAD | tar x
	make -C orte-$(VER) -f Makefile.cvs
	rm -rf orte-$(VER)/autom4te.cache
# Export sources again for building of documentation and copy generated orte manual to release dir
	test ! -d orte-$(VER)-doc
	git archive --format=tar --prefix=orte-$(VER)-doc/ HEAD | tar x
	make -C orte-$(VER)-doc/doc
	cp orte-$(VER)-doc/doc/orteman.pdf orte-$(VER)/doc
	rm -rf orte-$(VER)-doc
# Create tarball
	tar czf $@ orte-$(VER)
	rm -rf orte-$(VER)
	@echo "Tarball stored as orte-$(VER).tar.gz"

dist-check: orte-$(VER).tar.gz
	tar xf $<
# Check that we can compile the content of the tarball
	mkdir orte-$(VER)/_build
	cd orte-$(VER)/_build && ../configure && make V=0
	mkdir orte-$(VER)/_win
	cd orte-$(VER)/_win && ../configure --host=i686-w64-mingw32 CC=i686-w64-mingw32-gcc && make V=0
	rm -rf orte-$(VER)
