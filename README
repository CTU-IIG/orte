    	            ORTE - Open Real-Time Ethernet
		    ------------------------------

What is it?
-----------
ORTE is open source implementation of the RTPS communication protocol
defined by Real Time Innovations (http://www.rti.com). RTPS is a new
application layer protocol, targeted at real-time communication area,
which is build on top of the standard UDP stack.

Which targets are supported by ORTE?
-----------------------------------
UNIX - Linux, Solars, MacOS, FreeBSD
Windows - MinGW, CygWin, MSVC, PharLap, ReactOS, Wine (see README.windows)
RTLinux - with preliminary UDP stack
RTAI - with RTNet
JAVA
Android (see README.android)
RTEMS
Blackberry


note: was tested on
sparc-sun-solaris2.9
powerpc-apple-darwin6.8

How to compile and install it?
---------------------------

Simply untar installation package into desired directory, enter this
directory and issue the following commands.

UserSpace compilation:
./configure
make 
make install

After this procedure ortemanager and orteping are placed in
/usr/local/bin, the library is placed in /usr/local/lib and include
headers in /usr/local/include.

RTLinux compilation with wIP: (DEPRICATED)
./configure --with-linux=/patched_linux_dir/ --with-rtlinux=/rtlinux_dir/ --with-rtlinuxwip=/wip_dir/
make 
make install

RTLinux compilation with onetd: (DEPRICATED)
./configure --with-linux=/patched_linux_dir/ --with-rtlinux=/rtlinuxh_dir/ --with-rtlinuxonetd=/onetd_dir/
make 
make install

RTAI compilation:
./configure --with-linux=/patched_linux_dir/ --with-rtai=/rtai dir/ --with-rtnet=/rtnet dir/ 
make 
make install

JAVA compilation:
./configure --with-java=/java_home_dir/ 
make
make install


Another way of compiling ORTE is to use OMK compilation method. See
https://rtime.felk.cvut.cz/omk/ for details about OMK. Just run

  make

in the root of the ORTE project. This will create _compiled directory,
which will contain the compiled binaries as well as other files.

How to start?
-------------

run :ortemanager &
see :ortemanager -h for usage

note: ortemanager have to be running during all communication. For
future work can be added into /etc/init.d/... script for starting
ortemanager during boot of machine. This scripts (redhat and mandrake)
are located in "orte/manager/rc/ortemanagerd". For developing a RT
application, ortemnager can be running in userspace. Start it with
parameter "-k 192.168.4.2". This address is the IP address of the RT
application.

How to test communication?
-------------------------

In a shell try to type "orteping -p -s". This will create one
publisher and one subscriber with the same topic and type. If you see
messages like

[root@localhost ORTEPing]# ./orteping -p -s
sent issue 1
received fresh issue 1
sent issue 2
received fresh issue 2
sent issue 3
received fresh issue 3

then communication works. If you see only sending messages, it is a
sign that ortemanager is not probably running. See "orteping -h" for
usage.

Now, you can develop your applications (see documentation).

Obtaining the code from Git repository
--------------------------------------

You can obtain the latest ORTE source code from Git repository by
running:

  $ git clone git://git.code.sf.net/p/orte/orte

Building From Git
-----------------

To build ORTE code from Git, you will need Autoconf, Automake, and any
tools that those utilities require (GNU m4, Perl, etc.). See the
configure.in file to find the minimum versions of each of these tools.

After checking out the code, you will need to perform these steps to
get to the point where you can run "configure" and "make".

 $ make -f Makefile.git

Feedback is welcome - send bug reports, enhancements, checks, money
orders, etc. to ORTE maintainers <orte@rtime.felk.cvut.cz>. The mail
will go to Petr Smolik, Michal Sojka and Pavel Pisa.
