    	            ORTE - Open Real-Time Ethernet
		    ------------------------------

What is it?
-----------
ORTE is open source implementation of RTPS communication protocol 
defined by Real Time Innovations (http://www.rti.com). 
RTPS is new application layer protocol targeted to real-time communication 
area, which is build on top of standard UDP stack.

Which targets are supported by ORTE?
-----------------------------------
UNIX - Linux, Solars, MacOS, FreeBSD
Windows - MinGW, CygWin, MSVC, PharLap
RTLinux - with preliminary UDP stack
RTAI - with RTNet
JAVA

note: was tested on
sparc-sun-solaris2.9
powerpc-apple-darwin6.8

How to compile and install it?
---------------------------

simply untar instalation package into desired directory, enter this 
directory and issue following commands.

UserSpace compilation:
./configure
make 
make install

After this procedure ortemanager and orteping are placed in /usr/local/bin,
library is placed in /usr/local/lib and include headers in /usr/local/include.

RTLinux compilation with wIP: (DEPRICATED)
./configure --with-linux=/patched_linux_dir/ --with-rtlinux=/rtlinux_dir/ --with-rtlinuxwip=/wip_dir/
make 
make install

RTLinux compilation with onetd: (DEPRICATED)
./configure --with-linux=/patched_linux_dir/ --with-rtlinux=/rtlinuxh_dir/ --with-rtlinuxonetd=/onetd_dir/
make 
make install

RTAI compilation:
./configure --with-linux=/patched_linux_dir/ --with-rtai=/rtai dir/ --with-rtnet=/rtnet dir/ 
make 
make install

JAVA compilation:
./configure --with-java=/java_home_dir/ 
make
make install


Another way, how to compile ORTE project is to use OMK compilation
method. See https://rtime.felk.cvut.cz/omk/ for details about OMK. For
standalone compilation (without OCERA), just copy folder orte to other
(private) destination. Run ./switch2standalone in the root of orte
directory.

Now just type a run
make

in the root of the ORTE project will be create two directories, which contains compilation results.

How to start?
-------------

run :ortemanager &
see :ortemanager -h for usage
note:ortemanager have to be running during all communication. For future work can 
be added into /etc/init.d/... script for starting ortemanager during boot
of machine. This scripts (redhat and mandrake) are located in 
"orte/manager/rc/ortemanagerd"
For developing a RT application, ortemnager can be running in userspace.
Start it with parameter "-k 192.168.4.2". This address is IP address of 
RT application.

How to test communication?
-------------------------

in a shell try to type "orteping -p -s". So, now will be created one publisher
and one subscriber with same topic and type. If you see messages like

[root@localhost ORTEPing]# ./orteping -p -s
sent issue 1
received fresh issue 1
sent issue 2
received fresh issue 2
sent issue 3
received fresh issue 3

communication works. If you see only sending messsages, it's sign that ortemanager 
is not probably running.
See "orteping -h" for usage.

Now, you can develop self applications (see documentation).

Obtaining the code from Git repository
--------------------------------------

You can obtain the latest ORTE source code from Git repository by
running:

  $ git clone git://git.code.sf.net/p/orte/orte

Building From Git
-----------------

To build ORTE code from Git, you will need Autoconf, Automake, and any
tools that those utilities require (GNU m4, Perl, etc.). See the
configure.in file to find the minimum versions of each of these tools.

After checking out the code, you will need to perform these steps to
get to the point where you can run "configure" and "make".

 $ make -f Makefile.cvs 

Feedback is welcome - send bug reports, enhancements, checks, money
orders, etc. to the address below.

Petr Smolik             petr.smolik@wo.cz
Michal Sojka		sojkam1@fel.cvut.cz
